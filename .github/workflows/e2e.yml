name: run-e2e
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  run-e2e-job:
    name: run-e2e-job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2          
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.17'
      - name: install-dependencies
        run: |
          go install sigs.k8s.io/kind@v0.17.0 

          curl -LO https://dl.k8s.io/release/v1.21.0/bin/linux/amd64/kubectl
          chmod +x kubectl

          HELM_PKG="helm-v3.10.3-linux-amd64.tar.gz"
          curl -LO https://get.helm.sh/"${HELM_PKG}"
          tar -zxvf "${HELM_PKG}"
          mv ./linux-amd64/helm .

          # Check everything is installed:
          go version
          kind version
          kubectl version --short --client=true
          helm version
      - name: setup-k8s-cluster
        run: |
          kind create cluster \
          --image=kindest/node:v1.21.14@sha256:9d9eb5fb26b4fbc0c6d95fa8c790414f9750dd583f5d7cee45d92e8c26670aa1 \
          --config=./e2e/kind-cluster-config.yaml \
          --wait 5m
          kubectl wait --for=condition=ready node -l worker=true
      - uses: docker/build-push-action@v3
        with:
          push: false
          # Get commit short sha within Github action workflow
          # Just a random string name, we aren't uploading anyway
          tags: ydb-operator:current
      - name: deploy-operator
        run: |
          kind load docker-image ydb-operator:current
          helm -n ydb-operator install --create-namespace ydb-operator ./deploy/ydb-operator \
          -f ./e2e/operator-values.yaml \
          --set image.repository=ydb-operator \
          --set image.tag=current
          # wait until operator is available, we can't wait until it's ready because of webhooks :'(
          sleep 20
      - name: run-tests
        run: |
          kubectl apply -f ./e2e/manifests/storage.yaml
          kubectl apply -f ./e2e/manifests/database.yaml
          # Namespace and labels are hardcoded in the next command, that is brittle
          kubectl wait --for=condition=ready pod -n ydb -l ydb-cluster=kind-database
      - name: teardown-k8s-cluster
        run: |
          kind delete cluster
