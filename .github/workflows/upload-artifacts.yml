name: upload_artifacts
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
# TODO enable this to run post-merge when well-tested
# on:
#   pull_request:
#     types:
#       - closed
jobs:
  upload_artifacts:
    environment: registries
    # TODO enable this to run post-merge when well-tested
    # if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2          
    - name: install-dependencies
      run: |
        HELM_PKG="helm-v3.10.3-linux-amd64.tar.gz"
        curl -LO https://get.helm.sh/"${HELM_PKG}"
        tar -zxvf "${HELM_PKG}"
        mv ./linux-amd64/helm .
        echo "$(pwd)" >> $GITHUB_PATH
    - name: install-yc
      run: |
        curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
        echo "~/yandex-cloud/bin/" >> $GITHUB_PATH
    - name: initialize-yc
      run: |
        # Cloud: yc-ydbaas; catalogue: docker-images
        yc config profile create private-docker-helm
        echo "$CI_KEYS_PRIVATE_DOCKER_HELM" > private-docker-helm-key.json
        yc config --profile private-docker-helm set service-account-key private-docker-helm-key.json

        # TODO not enough permissions to create a SA here, ask someone
        # Cloud: ycr-public-registries; catalogue: cloud-public-images
        # yc config profile create public-docker
        # echo "$CI_KEYS_PUBLIC_DOCKER" > public-docker-key.json
        # yc config --profile public-docker set service-account-key public-docker-key.json

        # TODO make a set of AWS-compatible credentials and make this work as well
        # Cloud: yc-ydb; bucket charts.ydb.tech
        # yc config profile create public-helm
        # echo "$CI_KEYS_PUBLIC_HELM" > public-helm-key.json
        # yc config --profile public-helm set service-account-key public-helm-key.json
      env:
        CI_KEYS_PRIVATE_DOCKER_HELM: ${{ secrets.CI_KEYS_PRIVATE_DOCKER_HELM }}
        CI_KEYS_PUBLIC_DOCKER: ${{ secrets.CI_KEYS_PUBLIC_DOCKER }}
    - name: parse-version-from-chart
      run: | 
        VERSION=$(cat ./deploy/ydb-operator/Chart.yaml | sed -n 's/^version: //p')
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    - name: login-to-registries
      run: |
        cat private-docker-helm-key.json | docker login --username json_key --password-stdin cr.yandex
        yc --profile private-docker-helm iam create-token | helm registry login cr.yandex/crpl7ipeu79oseqhcgn2/charts -u iam --password-stdin

        # TODO not enough permissions to create a SA here, ask someone
        # cat public-docker-key.json | docker login --username json_key --password-stdin cr.yandex

        # TODO login into S3 bucket
        # ??? 
    - name: build-and-push-operator-image
      run: 
        docker build -t cr.yandex/crpl7ipeu79oseqhcgn2/ydb-operator:${{ env.VERSION }} .
        docker push cr.yandex/crpl7ipeu79oseqhcgn2/ydb-operator:"$VERSION"
    - name: package-and-push-helm-chart
      run: |
        helm package ./deploy/ydb-operator
        # mkdir charts
        # cp ./ydb-operator-"$VERSION".tgz ./charts
        helm push ./ydb-operator-"$VERSION".tgz oci://cr.yandex/crpl7ipeu79oseqhcgn2/charts
